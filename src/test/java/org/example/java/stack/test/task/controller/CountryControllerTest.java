package org.example.java.stack.test.task.controller;

import lombok.extern.slf4j.Slf4j;
import org.example.java.stack.test.task.dto.CountryDTO;
import org.example.java.stack.test.task.entity.Country;
import org.example.java.stack.test.task.repo.CountryRepo;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.reactive.AutoConfigureWebTestClient;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.data.r2dbc.core.DatabaseClient;
import org.springframework.http.MediaType;
import org.springframework.test.annotation.DirtiesContext;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.reactive.server.WebTestClient;
import reactor.core.publisher.Flux;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.List;

@Slf4j
@DirtiesContext
@ActiveProfiles("test")
@AutoConfigureWebTestClient
@ExtendWith(SpringExtension.class)
@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
public class CountryControllerTest {

    @Autowired
    private CountryRepo countryRepo;

    @Autowired
    private DatabaseClient databaseClient;

    @Autowired
    private WebTestClient webTestClient;

    @Ignore //FixMe: Does not work with test containers...
    @BeforeEach
    public  void setup(){
        List<String> statements = Arrays.asList(
                "drop table if exists countries;",
                "create table countries ( id int generated by default as identity primary key, country_code varchar(2) not null, counter bigint default 0);"
        );
        statements.forEach(it -> databaseClient.execute(it)
                .fetch()
                .rowsUpdated()
                .block());
        countryRepo.deleteAll()
                .thenMany(Flux.fromIterable(getCountries()))
                .flatMap(countryRepo::save)
                .doOnNext(country -> System.out.println("Country Inserted from CountryControllerTest: " + country))
                .blockLast();
    }

    @Test
    @Ignore //FixMe: Does not work with test containers...
    public void whenGetCountries() {
        webTestClient.get()
                .uri("/countries").exchange()
                .expectStatus().isOk()
                .expectHeader().contentType(MediaType.APPLICATION_JSON)
                .expectBodyList(CountryDTO.class)
                .hasSize(4)
                .consumeWith(it -> {
                    List<CountryDTO> countryList = it.getResponseBody();
                    Assert.assertNotNull(countryList);
                    countryList.forEach(countryDTO -> {
                        Assert.assertNotNull(countryDTO.getCountryCode());
                        Assert.assertNotNull(countryDTO.getCounterValue());
                    });
                });
    }

    private List<Country> getCountries() {
        return Arrays.asList(
                new Country(null, "AU", BigInteger.valueOf(0)),
                new Country(null, "RU", BigInteger.valueOf(5)),
                new Country(null, "EU", BigInteger.valueOf(8)),
                new Country(null, "MU", BigInteger.valueOf(29))
        );
    }
}